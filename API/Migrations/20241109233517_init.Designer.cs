// <auto-generated />
using System;
using DateAppApi.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DateAppApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241109233517_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DateAppApi.Models.Date", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatingUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OtherUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatingUserId");

                    b.HasIndex("OtherUserId");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("DateAppApi.Models.DateIdea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatingUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatingUserId");

                    b.ToTable("DateIdeas");
                });

            modelBuilder.Entity("DateAppApi.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("PictureOfDateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PictureOfDateId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("DateAppApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfilePictureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeJoined")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ProfilePictureId")
                        .IsUnique()
                        .HasFilter("[ProfilePictureId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DateDateIdea", b =>
                {
                    b.Property<int>("DateIdeasId")
                        .HasColumnType("int");

                    b.Property<int>("DatesPresentOnId")
                        .HasColumnType("int");

                    b.HasKey("DateIdeasId", "DatesPresentOnId");

                    b.HasIndex("DatesPresentOnId");

                    b.ToTable("DateDateIdea");
                });

            modelBuilder.Entity("DateAppApi.Models.Date", b =>
                {
                    b.HasOne("DateAppApi.Models.User", "CreatingUser")
                        .WithMany("CreatedDates")
                        .HasForeignKey("CreatingUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DateAppApi.Models.User", "OtherUser")
                        .WithMany("PartOfDates")
                        .HasForeignKey("OtherUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatingUser");

                    b.Navigation("OtherUser");
                });

            modelBuilder.Entity("DateAppApi.Models.DateIdea", b =>
                {
                    b.HasOne("DateAppApi.Models.User", "CreatingUser")
                        .WithMany("CreatedDateIdeas")
                        .HasForeignKey("CreatingUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatingUser");
                });

            modelBuilder.Entity("DateAppApi.Models.Image", b =>
                {
                    b.HasOne("DateAppApi.Models.Date", "PictureOfDate")
                        .WithMany("Images")
                        .HasForeignKey("PictureOfDateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("PictureOfDate");
                });

            modelBuilder.Entity("DateAppApi.Models.User", b =>
                {
                    b.HasOne("DateAppApi.Models.Image", "ProfilePicture")
                        .WithOne("ProfilePictureOfUser")
                        .HasForeignKey("DateAppApi.Models.User", "ProfilePictureId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ProfilePicture");
                });

            modelBuilder.Entity("DateDateIdea", b =>
                {
                    b.HasOne("DateAppApi.Models.DateIdea", null)
                        .WithMany()
                        .HasForeignKey("DateIdeasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DateAppApi.Models.Date", null)
                        .WithMany()
                        .HasForeignKey("DatesPresentOnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DateAppApi.Models.Date", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("DateAppApi.Models.Image", b =>
                {
                    b.Navigation("ProfilePictureOfUser");
                });

            modelBuilder.Entity("DateAppApi.Models.User", b =>
                {
                    b.Navigation("CreatedDateIdeas");

                    b.Navigation("CreatedDates");

                    b.Navigation("PartOfDates");
                });
#pragma warning restore 612, 618
        }
    }
}
